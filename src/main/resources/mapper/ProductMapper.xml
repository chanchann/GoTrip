<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.ProductMapper">
  <resultMap id="BaseResultMap" type="model.Product">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="subTitle" jdbcType="VARCHAR" property="subTitle" />
    <result column="orignalPrice" jdbcType="REAL" property="orignalPrice" />
    <result column="promotePrice" jdbcType="REAL" property="promotePrice" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="cid" jdbcType="INTEGER" property="cid" />
    <result column="createDate" jdbcType="TIMESTAMP" property="createDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, subTitle, orignalPrice, promotePrice, stock, cid, createDate
  </sql>
  <select id="selectByExample" parameterType="model.ProductExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from Product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from Product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="model.ProductExample">
    delete from Product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="model.Product">
    insert into Product (id, name, subTitle, 
      orignalPrice, promotePrice, stock, 
      cid, createDate)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{subTitle,jdbcType=VARCHAR}, 
      #{orignalPrice,jdbcType=REAL}, #{promotePrice,jdbcType=REAL}, #{stock,jdbcType=INTEGER}, 
      #{cid,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="model.Product">
    insert into Product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="subTitle != null">
        subTitle,
      </if>
      <if test="orignalPrice != null">
        orignalPrice,
      </if>
      <if test="promotePrice != null">
        promotePrice,
      </if>
      <if test="stock != null">
        stock,
      </if>
      <if test="cid != null">
        cid,
      </if>
      <if test="createDate != null">
        createDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="subTitle != null">
        #{subTitle,jdbcType=VARCHAR},
      </if>
      <if test="orignalPrice != null">
        #{orignalPrice,jdbcType=REAL},
      </if>
      <if test="promotePrice != null">
        #{promotePrice,jdbcType=REAL},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="cid != null">
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="model.ProductExample" resultType="java.lang.Long">
    select count(*) from Product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update Product
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.subTitle != null">
        subTitle = #{record.subTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.orignalPrice != null">
        orignalPrice = #{record.orignalPrice,jdbcType=REAL},
      </if>
      <if test="record.promotePrice != null">
        promotePrice = #{record.promotePrice,jdbcType=REAL},
      </if>
      <if test="record.stock != null">
        stock = #{record.stock,jdbcType=INTEGER},
      </if>
      <if test="record.cid != null">
        cid = #{record.cid,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null">
        createDate = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update Product
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      subTitle = #{record.subTitle,jdbcType=VARCHAR},
      orignalPrice = #{record.orignalPrice,jdbcType=REAL},
      promotePrice = #{record.promotePrice,jdbcType=REAL},
      stock = #{record.stock,jdbcType=INTEGER},
      cid = #{record.cid,jdbcType=INTEGER},
      createDate = #{record.createDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="model.Product">
    update Product
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="subTitle != null">
        subTitle = #{subTitle,jdbcType=VARCHAR},
      </if>
      <if test="orignalPrice != null">
        orignalPrice = #{orignalPrice,jdbcType=REAL},
      </if>
      <if test="promotePrice != null">
        promotePrice = #{promotePrice,jdbcType=REAL},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="cid != null">
        cid = #{cid,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        createDate = #{createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.Product">
    update Product
    set name = #{name,jdbcType=VARCHAR},
      subTitle = #{subTitle,jdbcType=VARCHAR},
      orignalPrice = #{orignalPrice,jdbcType=REAL},
      promotePrice = #{promotePrice,jdbcType=REAL},
      stock = #{stock,jdbcType=INTEGER},
      cid = #{cid,jdbcType=INTEGER},
      createDate = #{createDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>